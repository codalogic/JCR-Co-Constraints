condition = relational ( * ( and-combiner relational ) / * ( or-combiner relational ) )

relational = ["!"] value / value comparator value / ["!"] condition-group

value = identifier / constant / ternary / function

identifier = "$" / "$" [ alias "." ] name / "@" [ alias "." ] name

constant = "null" / "true" / "false" / integer / float / q_string / regex

comparator = "==" / "!=" / "<" / "<=" / ">=" / ">"

condition-group = "(" condition ")"

ternary = "if" condition "then" condition "else" condition

function = "name" "(" identifier ")" /
           "length" "(" identifier ")" /
           "count" "(" identifier ")" /
           "capture" "(" regex "," identifier ")"
           "is_integer" "(" identifier ")" /
           "is_float" "(" identifier ")" /
           etc...